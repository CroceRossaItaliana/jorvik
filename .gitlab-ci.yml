stages:
  - build
  - setup
  - restore_db
  - deploy

cache:
  key: ${CI_MERGE_REQUEST_ID}
  paths:
    - .cache/pip
    - venv/

variables:
    GIT_CLONE_PATH: '$CI_BUILDS_DIR/$CI_PROJECT_NAME/$CI_MERGE_REQUEST_ID'

build_containers:
  stage: build
  tags:
    - staging
  before_script:
    - chown -R gitlab-runner:gitlab-runner /home/gitlab-runner
    - docker-compose -f docker-compose-staging.yml ps
  script:
    - pwd
    - docker build -t gaia:${CI_MERGE_REQUEST_ID} .
  only:
    - merge_requests

build_release_containers:
  stage: build
  tags:
    - staging
  script:
    - pwd
    - docker build -t gaia:master .
  only:
    - release

setup_pr:
  stage: setup
  tags:
    - staging
  script:
    - echo $CI_MERGE_REQUEST_ID
    - docker-compose -f docker-compose-staging.yml down -v
    - sleep 30
    - docker-compose -f docker-compose-staging.yml up -d db
  after_script:
    - docker-compose -f docker-compose-staging.yml ps
  only:
    - merge_requests

restore_db:
  stage: restore_db
  tags:
    - staging
  before_script:
    - chown -R gitlab-runner:gitlab-runner /home/gitlab-runner
  script:
    - docker-compose -f docker-compose-staging.yml stop
    - sleep 30
    - ls -alh /opt/gaia_dumps
    - docker-compose -f docker-compose-staging.yml up -d db
    - docker-compose -f docker-compose-staging.yml ps
    - sleep 30
    - docker cp /opt/gaia_dumps/smalldump "$(docker-compose ps -q db)":/tmp/smalldump
    - echo "SELECT pg_terminate_backend(pid) FROM pg_stat_activity WHERE datname = 'jorvik';" | docker-compose -f docker-compose-staging.yml exec -T db psql -U postgres
    - docker-compose -f docker-compose-staging.yml exec -T db pg_restore -C --clean --no-acl --no-owner -j 8 -U postgres -d postgres /tmp/smalldump
    #- cat /opt/gaia_dumps/smalldump | docker-compose -f docker-compose-staging.yml exec -T db psql -U postgres -d jorvik
  only:
    - merge_requests
  allow_failure: true

fire_pr:
  stage: deploy
  tags:
    - staging
  script:
    - echo $CI_MERGE_REQUEST_ID
    - env
    - docker-compose -f docker-compose-staging.yml up -d
    - sleep 10
    - docker-compose -f docker-compose-staging.yml restart proxy
  after_script:
    - docker-compose -f docker-compose-staging.yml ps
  environment:
    name: pr$CI_MERGE_REQUEST_ID
    url: https://pr$CI_MERGE_REQUEST_ID.staging.gaia.cri.it
  only:
    - merge_requests

restore_db_release:
  stage: restore_db
  tags:
    - staging
  before_script:
    - export CI_MERGE_REQUEST_ID=master
    - chown -R gitlab-runner:gitlab-runner /home/gitlab-runner
  script:
    - docker-compose -f docker-compose-staging.yml stop
    - sleep 30
    - ls -alh /opt/gaia_dumps
    - docker-compose -f docker-compose-staging.yml up -d db
    - docker-compose -f docker-compose-staging.yml ps
    - sleep 30
    - docker cp /opt/gaia_dumps/smalldump "$(docker-compose ps -q db)":/tmp/smalldump
    - echo "SELECT pg_terminate_backend(pid) FROM pg_stat_activity WHERE datname = 'jorvik';" | docker-compose -f docker-compose-staging.yml exec -T db psql -U postgres
    - docker-compose -f docker-compose-staging.yml exec -T db pg_restore --disable-triggers -C --clean --no-acl --no-owner -j 8 -U postgres -d postgres /tmp/smalldump
  only:
    - release
  allow_failure: true

deploy_release:
  stage: deploy
  tags:
    - staging
  before_script:
    - export CI_MERGE_REQUEST_ID=master
  script:
    - docker-compose -f docker-compose-staging.yml down
    - sleep 30
    - docker-compose -f docker-compose-staging.yml up -d db
    - sleep 10
    - docker-compose -f docker-compose-staging.yml up -d
    - sleep 30
    - docker-compose -f docker-compose-staging.yml restart proxy
  environment:
    name: release
    url: https://release.staging.gaia.cri.it
  only:
    - release

deploy_provami:
  stage: deploy
  tags:
    - staging
  before_script:
    - export CI_MERGE_REQUEST_ID=master
  script:
    - docker-compose -f docker-compose-staging.yml down -v
    - sleep 30
    - docker-compose -f docker-compose-staging.yml -f docker-compose-provami.yml up -d
    - sleep 30
    - docker-compose -f docker-compose-staging.yml -f docker-compose-provami.yml exec -T web python scramble.py --dati-di-esempio
    - docker-compose -f docker-compose-staging.yml -f docker-compose-provami.yml restart proxy
  environment:
    name: provami
    url: https://provami.gaia.cri.it
  only:
    - release

release_app01:
  stage: release
  tags:
    - gaia-app01,prod
  before_script:
    - su jorvik
    - cd ~/jorvik
    - git status
    - git stash
  script:
    - echo "pullerei..."
  after_script:
    - git stash pop
  only:
    - release
  when: manual